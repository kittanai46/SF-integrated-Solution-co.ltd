// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'user_dto.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

UserDto _$UserDtoFromJson(Map<String, dynamic> json) => UserDto(
      position: json['position'] as String?,
      orgName: json['org_name'] as String?,
      tambon: json['tambon'] as String?,
      mobileStatusAuthen: json['mobile_status_authen'] as String?,
      expireDate: json['expire_date'] as String?,
      roleSearchInternal: json['role_search_internal'] == null
          ? null
          : RoleSearchInternalDto.fromJson(
              json['role_search_internal'] as Map<String, dynamic>),
      amphur: json['amphur'] as String?,
      kkCode: json['kk_code'] as String?,
      levelRoleSearch: json['level_role_search'] as String?,
      posOrg: json['pos_org'] as String?,
      lastname: json['lastname'] as String?,
      bkCode: json['bk_code'] as String?,
      blockUser: json['block_user'] as bool?,
      mobileStatusDevice: json['mobile_status_device'] as String?,
      mobilePhone: json['mobile_phone'] as String?,
      rank: json['rank'] as String?,
      bH: json['BH'] as String?,
      statusDesc: json['status_desc'] as String?,
      roleSearchExternal: json['role_search_external'] == null
          ? null
          : RoleSearchExternalDto.fromJson(
              json['role_search_external'] as Map<String, dynamic>),
      province: json['province'] as String?,
      policeId: json['police_id'] as String?,
      bK: json['BK'] as String?,
      statusCode: json['status_code'] as String?,
      orgCode: json['org_code'] as String?,
      pid: json['pid'] as String?,
      firstname: json['firstname'] as String?,
      bhCode: json['bh_code'] as String?,
      toActiveDate: json['to_active_date'] as String?,
      favorite: json['favorite'] as String?,
    );

Map<String, dynamic> _$UserDtoToJson(UserDto instance) => <String, dynamic>{
      'position': instance.position,
      'org_name': instance.orgName,
      'tambon': instance.tambon,
      'mobile_status_authen': instance.mobileStatusAuthen,
      'expire_date': instance.expireDate,
      'role_search_internal': instance.roleSearchInternal,
      'amphur': instance.amphur,
      'kk_code': instance.kkCode,
      'level_role_search': instance.levelRoleSearch,
      'pos_org': instance.posOrg,
      'lastname': instance.lastname,
      'bk_code': instance.bkCode,
      'block_user': instance.blockUser,
      'mobile_status_device': instance.mobileStatusDevice,
      'mobile_phone': instance.mobilePhone,
      'rank': instance.rank,
      'BH': instance.bH,
      'status_desc': instance.statusDesc,
      'role_search_external': instance.roleSearchExternal,
      'province': instance.province,
      'police_id': instance.policeId,
      'BK': instance.bK,
      'status_code': instance.statusCode,
      'org_code': instance.orgCode,
      'pid': instance.pid,
      'firstname': instance.firstname,
      'bh_code': instance.bhCode,
      'to_active_date': instance.toActiveDate,
      'favorite': instance.favorite,
    };

RoleSearchExternalDto _$RoleSearchExternalDtoFromJson(
        Map<String, dynamic> json) =>
    RoleSearchExternalDto(
      flagBot: json['flag_bot'] as bool?,
      flagBotEnd: json['flag_bot_end'] as String?,
      flagBotLock: json['flag_bot_lock'] as bool?,
      flagBotStart: json['flag_bot_start'] as String?,
      flagDbd: json['flag_dbd'] as bool?,
      flagPersonCorrection: json['flag_person_correction'] as bool?,
      flagPersonCorrectionEnd: json['flag_person_correction_end'] as String?,
      flagPersonCorrectionLock: json['flag_person_correction_lock'] as bool?,
      flagPersonCorrectionStart:
          json['flag_person_correction_start'] as String?,
      flagPersonDlt: json['flag_person_dlt'] as bool?,
      flagPersonDltEnd: json['flag_person_dlt_end'] as String?,
      flagPersonDltLock: json['flag_person_dlt_lock'] as bool?,
      flagPersonDltStart: json['flag_person_dlt_start'] as String?,
      flagPersonDltDl: json['flag_person_dlt_dl'] as bool?,
      flagPersonDltDlEnd: json['flag_person_dlt_dl_end'] as String?,
      flagPersonDltDlLock: json['flag_person_dlt_dl_lock'] as bool?,
      flagPersonDltDlStart: json['flag_person_dlt_dl_start'] as String?,
      flagPersonDltPl: json['flag_person_dlt_pl'] as bool?,
      flagPersonDltPlEnd: json['flag_person_dlt_pl_end'] as String?,
      flagPersonDltPlLock: json['flag_person_dlt_pl_lock'] as bool?,
      flagPersonDltPlStart: json['flag_person_dlt_pl_start'] as String?,
      flagPersonDocr: json['flag_person_docr'] as bool?,
      flagPersonDocrEnd: json['flag_person_docr_end'] as String?,
      flagPersonDocrLock: json['flag_person_docr_lock'] as bool?,
      flagPersonDocrStart: json['flag_person_docr_start'] as String?,
      flagPersonDoe: json['flag_person_doe'] as bool?,
      flagPersonDoeEnd: json['flag_person_doe_end'] as String?,
      flagPersonDoeLock: json['flag_person_doe_lock'] as bool?,
      flagPersonDoeStart: json['flag_person_doe_start'] as String?,
      flagPersonDopa: json['flag_person_dopa'] as bool?,
      flagPersonDopaEnd: json['flag_person_dopa_end'] as String?,
      flagPersonDopaLock: json['flag_person_dopa_lock'] as bool?,
      flagPersonDopaStart: json['flag_person_dopa_start'] as String?,
      flagPersonDopaLinkage: json['flag_person_dopa_linkage'] as bool?,
      flagPersonDopaLinkageEnd: json['flag_person_dopa_linkage_end'] as String?,
      flagPersonDopaLinkageLock: json['flag_person_dopa_linkage_lock'] as bool?,
      flagPersonDopaLinkageStart:
          json['flag_person_dopa_linkage_start'] as String?,
      flagPersonGun: json['flag_person_gun'] as bool?,
      flagPersonGunEnd: json['flag_person_gun_end'] as String?,
      flagPersonGunLock: json['flag_person_gun_lock'] as bool?,
      flagPersonGunStart: json['flag_person_gun_start'] as String?,
      flagPersonNhso: json['flag_person_nhso'] as bool?,
      flagPersonNhsoEnd: json['flag_person_nhso_end'] as String?,
      flagPersonNhsoLock: json['flag_person_nhso_lock'] as bool?,
      flagPersonNhsoStart: json['flag_person_nhso_start'] as String?,
      flagPersonPtm: json['flag_person_ptm'] as bool?,
      flagPersonPtmEnd: json['flag_person_ptm_end'] as String?,
      flagPersonPtmLock: json['flag_person_ptm_lock'] as bool?,
      flagPersonPtmStart: json['flag_person_ptm_start'] as String?,
      flagPersonSso: json['flag_person_sso'] as bool?,
      flagPersonSsoEnd: json['flag_person_sso_end'] as String?,
      flagPersonSsoLock: json['flag_person_sso_lock'] as bool?,
      flagPersonSsoStart: json['flag_person_sso_start'] as String?,
      flagPersonTm: json['flag_person_tm'] as bool?,
      flagPersonTmEnd: json['flag_person_tm_end'] as String?,
      flagPersonTmLock: json['flag_person_tm_lock'] as bool?,
      flagPersonTmStart: json['flag_person_tm_start'] as String?,
      flagPersonTm61: json['flag_person_tm61'] as bool?,
      flagPersonTm61End: json['flag_person_tm61_end'] as String?,
      flagPersonTm61Lock: json['flag_person_tm61_lock'] as bool?,
      flagPersonTm61Start: json['flag_person_tm61_start'] as String?,
      flagPersonWarrant: json['flag_person_warrant'] as bool?,
      flagVerhicleDlt: json['flag_vehicle_dlt'] as bool?,
      flagVerhiclePtm: json['flag_vehicle_ptm'] as bool?,
      flagPersonPrisoner: json['flag_person_prisoner'] as bool?,
      flagPersonWarrantCourt: json['flag_person_warrant_court'] as bool?,
      flagPersonWarrantCourtEnd:
          json['flag_person_warrant_court_end'] as String?,
      flagPersonWarrantCourtLock:
          json['flag_person_warrant_court_lock'] as bool?,
      flagPersonWarrantCourtStart:
          json['flag_person_warrant_court_start'] as String?,
    );

Map<String, dynamic> _$RoleSearchExternalDtoToJson(
        RoleSearchExternalDto instance) =>
    <String, dynamic>{
      'flag_bot': instance.flagBot,
      'flag_bot_end': instance.flagBotEnd,
      'flag_bot_lock': instance.flagBotLock,
      'flag_bot_start': instance.flagBotStart,
      'flag_dbd': instance.flagDbd,
      'flag_person_correction': instance.flagPersonCorrection,
      'flag_person_correction_end': instance.flagPersonCorrectionEnd,
      'flag_person_correction_lock': instance.flagPersonCorrectionLock,
      'flag_person_correction_start': instance.flagPersonCorrectionStart,
      'flag_person_dlt': instance.flagPersonDlt,
      'flag_person_dlt_end': instance.flagPersonDltEnd,
      'flag_person_dlt_lock': instance.flagPersonDltLock,
      'flag_person_dlt_start': instance.flagPersonDltStart,
      'flag_person_dlt_dl': instance.flagPersonDltDl,
      'flag_person_dlt_dl_end': instance.flagPersonDltDlEnd,
      'flag_person_dlt_dl_lock': instance.flagPersonDltDlLock,
      'flag_person_dlt_dl_start': instance.flagPersonDltDlStart,
      'flag_person_dlt_pl': instance.flagPersonDltPl,
      'flag_person_dlt_pl_end': instance.flagPersonDltPlEnd,
      'flag_person_dlt_pl_lock': instance.flagPersonDltPlLock,
      'flag_person_dlt_pl_start': instance.flagPersonDltPlStart,
      'flag_person_docr': instance.flagPersonDocr,
      'flag_person_docr_end': instance.flagPersonDocrEnd,
      'flag_person_docr_lock': instance.flagPersonDocrLock,
      'flag_person_docr_start': instance.flagPersonDocrStart,
      'flag_person_doe': instance.flagPersonDoe,
      'flag_person_doe_end': instance.flagPersonDoeEnd,
      'flag_person_doe_lock': instance.flagPersonDoeLock,
      'flag_person_doe_start': instance.flagPersonDoeStart,
      'flag_person_dopa': instance.flagPersonDopa,
      'flag_person_dopa_end': instance.flagPersonDopaEnd,
      'flag_person_dopa_lock': instance.flagPersonDopaLock,
      'flag_person_dopa_start': instance.flagPersonDopaStart,
      'flag_person_dopa_linkage': instance.flagPersonDopaLinkage,
      'flag_person_dopa_linkage_end': instance.flagPersonDopaLinkageEnd,
      'flag_person_dopa_linkage_lock': instance.flagPersonDopaLinkageLock,
      'flag_person_dopa_linkage_start': instance.flagPersonDopaLinkageStart,
      'flag_person_gun': instance.flagPersonGun,
      'flag_person_gun_end': instance.flagPersonGunEnd,
      'flag_person_gun_lock': instance.flagPersonGunLock,
      'flag_person_gun_start': instance.flagPersonGunStart,
      'flag_person_nhso': instance.flagPersonNhso,
      'flag_person_nhso_end': instance.flagPersonNhsoEnd,
      'flag_person_nhso_lock': instance.flagPersonNhsoLock,
      'flag_person_nhso_start': instance.flagPersonNhsoStart,
      'flag_person_ptm': instance.flagPersonPtm,
      'flag_person_ptm_end': instance.flagPersonPtmEnd,
      'flag_person_ptm_lock': instance.flagPersonPtmLock,
      'flag_person_ptm_start': instance.flagPersonPtmStart,
      'flag_person_sso': instance.flagPersonSso,
      'flag_person_sso_end': instance.flagPersonSsoEnd,
      'flag_person_sso_lock': instance.flagPersonSsoLock,
      'flag_person_sso_start': instance.flagPersonSsoStart,
      'flag_person_tm': instance.flagPersonTm,
      'flag_person_tm_end': instance.flagPersonTmEnd,
      'flag_person_tm_lock': instance.flagPersonTmLock,
      'flag_person_tm_start': instance.flagPersonTmStart,
      'flag_person_tm61': instance.flagPersonTm61,
      'flag_person_tm61_end': instance.flagPersonTm61End,
      'flag_person_tm61_lock': instance.flagPersonTm61Lock,
      'flag_person_tm61_start': instance.flagPersonTm61Start,
      'flag_person_warrant': instance.flagPersonWarrant,
      'flag_vehicle_dlt': instance.flagVerhicleDlt,
      'flag_vehicle_ptm': instance.flagVerhiclePtm,
      'flag_person_prisoner': instance.flagPersonPrisoner,
      'flag_person_warrant_court': instance.flagPersonWarrantCourt,
      'flag_person_warrant_court_end': instance.flagPersonWarrantCourtEnd,
      'flag_person_warrant_court_lock': instance.flagPersonWarrantCourtLock,
      'flag_person_warrant_court_start': instance.flagPersonWarrantCourtStart,
    };

RoleSearchInternalDto _$RoleSearchInternalDtoFromJson(
        Map<String, dynamic> json) =>
    RoleSearchInternalDto(
      flagVehicleTc: json['flag_vehicle_tc'] as bool?,
      flagPersonTc: json['flag_person_tc'] as bool?,
      flagCrimecaseWr: json['flag_crimecase_wr'] as bool?,
      flagCrimecase: json['flag_crimecase'] as bool?,
      flagCrimecaseLc: json['flag_crimecase_lc'] as bool?,
      flagWeaponSs: json['flag_weapon_ss'] as bool?,
      flagWeaponLost: json['flag_weapon_lost'] as bool?,
      flagAssetCc: json['flag_asset_cc'] as bool?,
      flagTrafficcase: json['flag_trafficcase'] as bool?,
      flagWeaponCc: json['flag_weapon_cc'] as bool?,
      flagVehicleCc: json['flag_vehicle_cc'] as bool?,
      flagPersonWr: json['flag_person_wr'] as bool?,
      flagPersonSs: json['flag_person_ss'] as bool?,
      flagVehicleLost: json['flag_vehicle_lost'] as bool?,
      flagPersonCc: json['flag_person_cc'] as bool?,
    );

Map<String, dynamic> _$RoleSearchInternalDtoToJson(
        RoleSearchInternalDto instance) =>
    <String, dynamic>{
      'flag_person_tc': instance.flagPersonTc,
      'flag_person_wr': instance.flagPersonWr,
      'flag_person_ss': instance.flagPersonSs,
      'flag_person_cc': instance.flagPersonCc,
      'flag_vehicle_tc': instance.flagVehicleTc,
      'flag_vehicle_cc': instance.flagVehicleCc,
      'flag_vehicle_lost': instance.flagVehicleLost,
      'flag_weapon_ss': instance.flagWeaponSs,
      'flag_weapon_cc': instance.flagWeaponCc,
      'flag_weapon_lost': instance.flagWeaponLost,
      'flag_crimecase': instance.flagCrimecase,
      'flag_crimecase_wr': instance.flagCrimecaseWr,
      'flag_crimecase_lc': instance.flagCrimecaseLc,
      'flag_trafficcase': instance.flagTrafficcase,
      'flag_asset_cc': instance.flagAssetCc,
    };
